(window.webpackJsonp=window.webpackJsonp||[]).push([[104],{481:function(e,n,t){"use strict";t.r(n);var a=t(45),i=Object(a.a)({},(function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"_23-peer-to-peer-bitcoin"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_23-peer-to-peer-bitcoin"}},[e._v("#")]),e._v(" 23.Peer-to-peer: Bitcoin")]),e._v(" "),t("p",[e._v("Bitcoin: A Peer-to-Peer Electronic Cash System, by Satoshi Nakamoto\n2008")]),e._v(" "),t("p",[e._v("why aren't credit cards the perfect digital money?")]),e._v(" "),t("ul",[t("li",[e._v("work online")]),e._v(" "),t("li",[e._v("hard to steal (a complex situation)\n+- can cancel transactions, call customer support")])]),e._v(" "),t("ul",[t("li",[e._v("relies on 3rd parties to verify (banks)\nb/c users cannot directly verify charges")]),e._v(" "),t("li",[e._v("3% fee")]),e._v(" "),t("li",[e._v("long settling time")]),e._v(" "),t("li",[e._v("hard to become a merchant\n+- tied to currency controlled by government")])]),e._v(" "),t("p",[e._v("bitcoin: e-money without a central trusted party\na public ledger: anyone can verify transactions")]),e._v(" "),t("p",[e._v("what's hard technically?\nforgery\ndouble spending\ntheft")]),e._v(" "),t("p",[e._v("what's hard socially/economically?\nwhy does it have value?\nhow to pay for infrastructure?\nmonetary policy (intentional inflation &c)\nlaws (taxes, laundering, drugs, terrorists)")]),e._v(" "),t("p",[e._v("let's design OneBit, a simple e-money system\nto illustrate a public, verifiable ledger using transaction chain\neach user owns some coins\nsingle server -- OneBank -- everyone talks to it\nOneBank records all transactions")]),e._v(" "),t("p",[e._v("OneBit transactions\nevery coin has a chain of transaction records\none for each time this coin was transferred as payment\nOneBank maintains the complete chain for each coin\nchain helps ensure that only the current owner spends")]),e._v(" "),t("p",[e._v("what's in a OneBit transaction record?\npublic key of new owner\nhash of this coin's previous transaction record\nsigned by private key of previous owner\n(BitCoin is much more complex: amount (fractional), multiple in/out, ...)")]),e._v(" "),t("p",[e._v("OneBit example:\nY owns a coin, previously given to it by X:\nT7: pub(Y), hash(T6), sig(X)\nY buys a hamburger from Z and pays with this coin\nZ tells Y Z's public key (\"address\")\nY creates a new transaction and signs it\nT8: pub(Z), hash(T7), sig(Y)\nOneBank verifies that:\nno other transaction mentions hash(T7),\nT8's sig() corresponds to T7's pub()\nZ waits until OneBank has seen/verified T8,\nverifies that T8's pub() is Z's public key,\nthen Z gives hamburger to Y")]),e._v(" "),t("p",[e._v("why include pub(Z)?")]),e._v(" "),t("p",[e._v("why sign with sig(Y)?")]),e._v(" "),t("p",[e._v("why include hash(T7)?\nhash(T7) identifies the exact coin to be spent\na coin ID scheme might be ambiguous if Y owned this coin previously")]),e._v(" "),t("p",[e._v('where is Z\'s resulting coin value "stored"?\ncoin balance = unspent xaction\nthe "identity" of a coin is the (hash of) its most recent xaction\nZ "owns" the coin: has private key that allows Z to make next xaction')]),e._v(" "),t("p",[e._v("does OneBit's transaction chain prevent stealing?\ncurrent owner's private key needed to sign next transaction\ndanger: attacker can steal Z's private key\nZ uses private key a lot, so probably on his PC, easy to steal?\na significant problem for BitCoin in practice")]),e._v(" "),t("p",[e._v("what if OneBank is corrupt?\nit can't forge transactions (doesn't know private keys)\nbut it can help people double-spend!")]),e._v(" "),t("p",[e._v("double-spending with OneBit\nsuppose OneBank is cooperating with Y to cheat Z or Q\nY creates two transactions for same coin: Y->Z, Y->Q\nboth have has pointing to same current end of chain\nOneBank shows chain ending in Y->Z to Z, and Y->Q to Q\nboth transactions look good, including signatures and hash\nnow both Z and Q will give hamburgers to Y")]),e._v(" "),t("p",[e._v("why was double-spending possible?\nOneBank can "),t("em",[e._v("hide")]),e._v(" some information,\nor selectively reveal it")]),e._v(" "),t("p",[e._v('what\'s needed?\nmany servers ("peers")\nsend all transactions to all peers\nmuch harder for a few bad peers to hide transactions\nconventions to un-fork if problems do arise')]),e._v(" "),t("p",[e._v("the BitCoin block chain\nsingle block chain contains transactions on all coins\na copy stored in each peer\nso each peer can validate new transactions against old ones\neach block:\nhash(prevblock)\nset of transactions\n\"nonce\" (not quite a nonce in the usual cryptographic sense)\ncurrent time (wall clock timestamp)\na transaction isn't real unless it's in the block chain\nnew block every 10 minutes containing xactions since prev block")]),e._v(" "),t("p",[e._v('who creates each new block?\nall the peers try\nrequirement: hash(block) < "target"\npeers try nonce values until this works out\ncan\'t predict a winning nonce, since cryptographic hash\ntrying one nonce is fast, but most nonces won\'t work\nit would take one CPU months to create one block\nbut thousands of peers are working on it\nsuch that expected time to first to find is about 10 minutes\nthe winner sends the new block to all peers\n(this is part of "mining")')]),e._v(" "),t("p",[e._v("how do transactions work w/ block chain?\nstart: all peers know ...<-B5\nand are working on B6 (trying different nonces)\nZ sends public key (address) to Y\nY sends Y->Z transaction to peers, which flood it\npeers buffer the transaction until B6 computed\npeers that heard Y->Z include it in next block\nso eventually ...<-B5<-B6<-B7, where B7 includes Y->Z")]),e._v(" "),t("p",[e._v("what if bad person wants to double-spend?\nstart with block chain ...<-B6\nY gets Y->Z into block chain\n...<-B6<-BZ (BZ contains Y->Z)\nZ will see Y->Z in chain and give Y a hamburger\ncan Y create ...<-B6<-BQ\nand persuade peers to accept it in place of ...<-B6<-BZ?")]),e._v(" "),t("p",[e._v("when will a peer accept chain CX it hears from another peer?\nsuppose peer already knows of chain CY\nit will accept CX if len(CX) > len(CY)\nand if CX passes some validity tests\nwill not accept if len(CX) = len(CY): first chain of same length wins")]),e._v(" "),t("p",[e._v("so attacker needs a longer chain to double-spend\ne.g. ...<-B6<-BQ<-B8, which is longer than ...<-B6<-BZ\nand must create it in less than 10 minutes\n"),t("em",[e._v("before")]),e._v(" main chain grows by another block\n10 minutes is the time it takes the 1000s of honest peers\nto find one block\nif the attacker has just one CPU, will take months to create the blocks\nby that time the main chain will be much longer\nno peer will accept the attacker's shorter chain\nattacker has no chance\nif the attacker has 1000s of CPUs -- more than all the honest\nbitcoin peers -- then the attacker can double spend")]),e._v(" "),t("p",[e._v("summary:\nattacker can force honest peers to switch chains if attacker\ncontrols majority of peer CPU power")]),e._v(" "),t("p",[e._v("how long should Z wait before giving Y the hamburger?\nuntil Z sees Y flood the transaction to many peers?\nno -- not in the chain, Y might flood conflicting xaction\nmaybe OK for low-value transactions\nuntil Z sees chain ...<-BZ?\nmaybe\nrisky -- non-zero chance that some other chain will win\ni.e. some lucky machine discovered a few blocks in a row\nquickly, but its network msgs have so far been lost\nperhaps that chain won't have Y->Z\nprobability goes down rapidly with number of blocks\nuntil Z sees chain with multiple blocks after BZ?\nyes -- slim chance attacker with few CPUs could catch up")]),e._v(" "),t("p",[e._v("validation checks:\nmuch of burden is on (honest) peers, to check new xactions/blocks\nto avoid ever having to scan the whole block chain\nand so that clients don't have to maintain the whole block chain\npeer, new xaction:\nno other transaction refers to same previous transaction\nsignature is by private key of previous transaction\n[ then will add transaction to txn list for new block being mined ]\npeer, new block:\nhash value < target (i.e. nonce is right, proof of work)\nprevious block hash exists\nnew chain longer than current chain\nall transactions in block are valid\nZ:\nY->Z is in a recent block\nZ's public key / address is in the transaction\nmultiple peers have accepted that block\nthere's several more blocks in the chain\n(other stuff has to be checked as well, lots of details)")]),e._v(" "),t("p",[e._v("where does each bitcoin originally come from?\neach time a peer creates a block, it gets 25 bitcoins\nassuming it is the winner for that block\nit puts its public key in a special transaction in the block\nthis is incentive for people to operate bitcoin peers\nbut that number halves every 210,000 blocks (abt 4 years)\nthe point: motivate people to run peers")]),e._v(" "),t("p",[e._v("Q: how do peers communicate / find each other?")]),e._v(" "),t("p",[e._v("Q: what prevents a bad peer from modifying an existing block?")]),e._v(" "),t("p",[e._v("Q: what if two nodes disagree on the validity of a transaction?\n(slight implementation differences between software versions)")]),e._v(" "),t("p",[e._v("Q: 10 minutes is annoying; could it be made much shorter?")]),e._v(" "),t("p",[e._v("Q: are transactions anonymous?  pseudonymous?  analogy: IP addresses.")]),e._v(" "),t("p",[e._v("Q: can bitcoins be stolen?")]),e._v(" "),t("p",[e._v("Q: if I steal bitcoins, is it safe to spend them?")]),e._v(" "),t("p",[e._v("Q: what can adversary do with a majority of CPU power in the world?\ncan double-spend\ncannot steal others' bitcoins\ncan prevent xaction from entering chain\ncan revert past xactions (by building longer chain from before that block)")]),e._v(" "),t("p",[e._v("Q: how rich are you likely to get with one machine mining?")]),e._v(" "),t("p",[e._v("Q: if more people (CPUs) mine, will that create new bitcoin faster?\nimportant use of block timestamps: control difficulty (hash target)")]),e._v(" "),t("p",[e._v("Q: why mine at all? why not start with a fixed number of coins?")]),e._v(" "),t("p",[e._v("Q: why does it make sense for the mining reward to decrease with time?")]),e._v(" "),t("p",[e._v("Q: is it a problem that there will be a fixed number of coins?")]),e._v(" "),t("p",[e._v("Q: what if the real economy grows (or shrinks)?")]),e._v(" "),t("p",[e._v("Q: why do bitcoins have value?\ne.g., 1 BTC appears to be around US$242 on may 12th 2015.")]),e._v(" "),t("p",[e._v("Q: will we still need banks, credit cards, &c?\ntoday, dollar bills are only a small fraction of total money\nsame may be true of bitcoin\nso properties of bitcoin (anonymity &c) may not be very important")]),e._v(" "),t("p",[e._v("Q: what are the benefits of banks, credit cards, &c?\ndisputes (Z takes payment and does not give hamburger to Y)\nloss / recovery (user cannot find their private key)")]),e._v(" "),t("p",[e._v("Q: will bitcoin scale well?\nas transaction rate increases?\nclaim CPU limits to 4,000 tps (signature checks)\nmore than Visa but less than cash\nas block chain length increases?\ndo you ever need to look at very old blocks?\ndo you ever need to xfer the whole block chain?\nmerkle tree: block headers vs txn data.")]),e._v(" "),t("p",[e._v("key idea: block chain\npublic ledger is a great idea\ndecentralization might be good\nmining seems imperfect, but does avoid centralized trust\ntieing ledger to new currency seems bad")])])}),[],!1,null,null,null);n.default=i.exports}}]);